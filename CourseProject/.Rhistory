install.packages("slidify")
require(devtools)
install_github("slidify","ramnathv")
install.packages("devtools")
library(devtools)
install_github('slidify','ramnathv')
install_github('slidifyLibraries','ramnathv')
install.packages(c("slidify","ggplot2","devtools"))
install.packages(c("slidify", "ggplot2", "devtools"))
install.packages("solidify")
source("http://bioconductor.org/bioLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite(c("GenomicFeatures","AnnotationDbi"))
library(ggplot2)
library(devtools)
install_github('ramnathv/slidify')
install.packages("KernSmooth")
library(KernSmooth)
require(devtools)
install_github("slidify", "ramnathv")
install_github('ramnathv/slidify')
add2 <- function(x,y) {
x+y
}
add2(3,5)
source('~/.active-rstudio-document')
x <-1:20
above(x,12)
above <- function(x,n =10) {
use <- x>n
x[use]
}
above(x)
source('~/.active-rstudio-document')
columnmeans(airquality)
columnmean(airquality)
columnmean <- function(x, removeNA= TRUE) {
nc <- ncol(x)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(x[,i],na.rm=removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality,FALSE)
args(paste)
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rep(0:1,each=5)
x
e <- rnorm(10,0,20)
y<- 0.5 + 2*x + e
y
plot(x,y)
install.packages("RMySQL")
library(swirl)
swirl()
View(top_counts)
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs =-.99)
quantile(pack_sum$unique,probs =0.99)
top_unique <- filter(pack_sum,unique >465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
reset()
swirl()
submit()
swirl()
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,count)
res <- gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex"),"class")
separate(res,sex_class,c("sex","class"))
submit()
submit()
submit()
submit()
submit()
students3
submit()
?spread
?spread
submit*
submit
submit()
submit()
submit()
submit()
reset()
swirl()
extract_numeric("class5")
submit()
submit()
submit()
submit()
students4
submit()
submit()
students4
submit()
submit()
passed
failed
mutate(passed = "passed")
mutate(passed, status = "passed")
mutate(status = "passed")
passed <- passed %>% mutate(status="passed")
failed <- failed  %>% mutate(status="failed")
?bind_rows
bind_rows(passed,failed)
sat
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
setwd("~/CourseraProjects/Gettingandcleaningdata")
library(data.table)
gdp <-gdp[X !=""]
gdpData <-gdpData[X !=""]
gdpData
direccion3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
archivo3 <- "GDP.csv"
download.file(direccion3, archivo3, method="curl")
GDP <- data.table(read.csv("GDP.csv", skip = 4, nrows = 191))
GDP <-GDP[X != ""]
GDP <- GDP[,list(X,X.1,X.3,X.4)]
setnames(GDP,c("X","X.1","X.3","X.4"),c("CountryCode","rankingGDP","Long.Name","GDP"))
direccion4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
archivo4 <- "EDSTATS_Country.csv"
download.file(direccion4, archivo4, method="curl")
EDSTATS <- data.table(read.csv("EDSTATS_Country.csv"))
data2 <- merge(GDP, EDSTATS, all = TRUE, by = c("CountryCode"))
head(data2)
colNames(data2)
class(data2)
colnames(data2)
data2[,Special.Names]
data2[,Special.Notes]
length(grep("Fiscal year end: June",data2$Special.Notes))
library(quantmod)
install.packages('quantmod')
library(quantmod)
amzn=getSymbols("AMZN",auto.assign = FALSE)
sampleTimes = index(amzn)
sampleTimes
length(grep("2012",sampletimes))
length(grep("2012",sampleTimes))
list <-grep("2012",sampleTimes)
list
wday(list,label=TRUE)
wday(list)
head(sampleTimes)
library(lubridate)
sample2012 <- sampleTimes[grep("2012",sampleTimes)]
head(sample2012)
length(wday(sample2012,label=TRUE))
wday(sample2012,label=TRUE)
days <- wday(sample2012,label=TRUE)
length(grep("Mon",days))
setwd("~/CourseraProjects/Gettingandcleaningdata/CourseProject")
source('~/CourseraProjects/Gettingandcleaningdata/CourseProject/run_analysis.R')
dataDir
features <- read.table("features.txt")
features <- read.table("./UCI HAR Dataset/features.txt")
features$V2
features$V1
colnames(features)
path_rf <- file.path("./data" , "UCI HAR Dataset")
files<-list.files(path_rf, recursive=TRUE)
files
path_rf <- file.path("./data" , "UCI HAR Dataset")
list.files(path_rf, recursive=TRUE)
files<-list.files(path_rf, recursive=TRUE)
files
path_rf <- file.path("UCI HAR Dataset")
files<-list.files(path_rf, recursive=TRUE)
files
source('~/CourseraProjects/Gettingandcleaningdata/CourseProject/run_analysis.R')
str(activity_test)
colnames(activity_test)
source('~/CourseraProjects/Gettingandcleaningdata/CourseProject/run_analysis.R')
head
head(data_feature)
data_feature$activityNum[1:6,]
data_feature$activityNum[1:6]
data_feature$subjectID[1:6]
colnames(data_feature)
source('~/CourseraProjects/Gettingandcleaningdata/CourseProject/run_analysis.R')
head(data_feature)
str(data_feature)
str(activity_labels)
source('~/CourseraProjects/Gettingandcleaningdata/CourseProject/run_analysis.R')
head(data_feature)
head(data_feature$activityNum,5)
head(data_feature$activityName,5)
source('~/CourseraProjects/Gettingandcleaningdata/CourseProject/run_analysis.R')
colnames(data_feature)
?aggregate
source('~/CourseraProjects/Gettingandcleaningdata/CourseProject/run_analysis.R')
head(sub_data_feature,4)
source('~/CourseraProjects/Gettingandcleaningdata/CourseProject/run_analysis.R')
